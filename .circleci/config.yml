version: 2
jobs:
  build:
    working_directory: /root/circulate
    docker:
      - image: python:3.6.0
        environment:
          FLASK_CONFIG: testing
          TEST_DATABASE_URL: postgresql://ubuntu@localhost/circle_test?sslmode=disable
      - image: postgres:9.6.2
        environment:
          POSTGRES_USER: ubuntu
          POSTGRES_DB: circle_test
          POSTGRES_PASSWORD: ""
      - image: selenium/standalone-chrome:3.1.0
    steps:
      - checkout
      - restore_cache:
          key: v1-{{ .Branch }}-{{ checksum "requirements/dev.txt" }}
      - run:
          command: |
            python3 -m venv ~/venv
            . ~/venv/bin/activate
            pip install /root/circulate/requirements/dev.txt
      - run:
          name: setup Heroku
          command: bash .circleci/setup-heroku.sh
      - save_cache:
          key: v1-{{ .Branch }}-{{ checksum "requirements/dev.txt" }}
          paths:
            - "~/.pip/cache"
            - "~/venv"
      - run:
          command: |
            . ~/venv/bin/activate
            python /root/circulate/manage.py test
      - store_artifacts:
          path: test-reports/
          destination: tr1
      - store_test_results:
          path: test-reports/
      - add_ssh_keys:
          fingerprints:
            - "48:a0:87:54:ca:75:32:12:c6:9e:a2:77:a4:7a:08:a4"
      - deploy:
          name: Echo
          command: echo "I would deploy here"

deployment:
  fake_deploy_for_cci2:
    tag: /.*/
    commands:
      - echo "make tags run in 2.0"

      #    name: Deploy Master to Heroku
      #    command: |
      #      if [ "${CIRCLE_BRANCH}" == "master" ]; then
      #        git push heroku master
      #        heroku run python manage.py deploy
      #        heroku restart
      #      fi
